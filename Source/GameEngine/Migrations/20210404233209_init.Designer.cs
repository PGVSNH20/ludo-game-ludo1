// <auto-generated />
using System;
using GameEngine.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameEngine.Migrations
{
    [DbContext(typeof(LudoGameDbContext))]
    [Migration("20210404233209_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameEngine.Models.GameMove", b =>
                {
                    b.Property<int>("GameMoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiceThrow")
                        .HasColumnType("int");

                    b.Property<int?>("GamePieceId")
                        .HasColumnType("int");

                    b.Property<int?>("LudoGameId")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalPosition")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerGamePlayerId")
                        .HasColumnType("int");

                    b.HasKey("GameMoveId");

                    b.HasIndex("GamePieceId");

                    b.HasIndex("LudoGameId");

                    b.HasIndex("PlayerGamePlayerId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("GameEngine.Models.GamePiece", b =>
                {
                    b.Property<int>("GamePieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<int?>("LudoGameId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("Possition")
                        .HasColumnType("int");

                    b.HasKey("GamePieceId");

                    b.HasIndex("LudoGameId");

                    b.ToTable("GamePieces");
                });

            modelBuilder.Entity("GameEngine.Models.GamePlayer", b =>
                {
                    b.Property<int>("GamePlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int?>("GamePlayersId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GamePlayerId");

                    b.HasIndex("GamePlayersId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GameEngine.Models.GamePlayers", b =>
                {
                    b.Property<int>("GamePlayersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("GamePlayersId");

                    b.ToTable("GamePlayers");
                });

            modelBuilder.Entity("GameEngine.Models.LudoGame", b =>
                {
                    b.Property<int>("LudoGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GamePlayersId")
                        .HasColumnType("int");

                    b.Property<int?>("NextTurnPlayerGamePlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerGamePlayerId")
                        .HasColumnType("int");

                    b.HasKey("LudoGameId");

                    b.HasIndex("GamePlayersId");

                    b.HasIndex("NextTurnPlayerGamePlayerId");

                    b.HasIndex("WinnerGamePlayerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameEngine.Models.GameMove", b =>
                {
                    b.HasOne("GameEngine.Models.GamePiece", "GamePiece")
                        .WithMany()
                        .HasForeignKey("GamePieceId");

                    b.HasOne("GameEngine.Models.LudoGame", null)
                        .WithMany("Moves")
                        .HasForeignKey("LudoGameId");

                    b.HasOne("GameEngine.Models.GamePlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerGamePlayerId");

                    b.Navigation("GamePiece");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameEngine.Models.GamePiece", b =>
                {
                    b.HasOne("GameEngine.Models.LudoGame", null)
                        .WithMany("GamePieceSetUp")
                        .HasForeignKey("LudoGameId");
                });

            modelBuilder.Entity("GameEngine.Models.GamePlayer", b =>
                {
                    b.HasOne("GameEngine.Models.GamePlayers", null)
                        .WithMany("Players")
                        .HasForeignKey("GamePlayersId");
                });

            modelBuilder.Entity("GameEngine.Models.LudoGame", b =>
                {
                    b.HasOne("GameEngine.Models.GamePlayers", "GamePlayers")
                        .WithMany()
                        .HasForeignKey("GamePlayersId");

                    b.HasOne("GameEngine.Models.GamePlayer", "NextTurnPlayer")
                        .WithMany()
                        .HasForeignKey("NextTurnPlayerGamePlayerId");

                    b.HasOne("GameEngine.Models.GamePlayer", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerGamePlayerId");

                    b.Navigation("GamePlayers");

                    b.Navigation("NextTurnPlayer");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("GameEngine.Models.GamePlayers", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("GameEngine.Models.LudoGame", b =>
                {
                    b.Navigation("GamePieceSetUp");

                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
